name: GCP VM IP Management

on:
  workflow_dispatch:

env:
  instance_name: instance-hk
  zone: asia-east2-a
  GCP_PROJECT_ID: infra-falcon-424407-c7
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  ip_management:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Get Current VM External IP
      id: get_current_ip
      run: |
        CURRENT_IP=$(gcloud compute instances describe "${{ env.instance_name }}" --zone="${{ env.zone }}" --format='value(networkInterfaces[0].accessConfigs[0].natIP)')
        echo "::set-output name=current_ip::$CURRENT_IP"
        echo $CURRENT_IP

    - name: 提升静态 IP
      if: steps.get_current_ip.outputs.current_ip != ''
      run: |
        gcloud compute addresses create ${{ env.INSTANCE_NAME }}-ip --addresses=$IP_ADDRESS --region=$(echo ${{ env.ZONE }} | cut -d'-' -f1,2)

    - name: Allocate New Static IP
      id: allocate_new_ip
      run: |
        REGION=$(echo "${{ env.zone }}" | cut -d'-' -f1,2)
        NEW_IP=$(gcloud compute addresses create new-static-ip --region "$REGION" --format='value(address)')
        echo "::set-output name=new_ip::$NEW_IP"
        
    - name: Attach New Static IP to VM
      run: |
        gcloud compute instances add-access-config "${{ env.instance_name }}" --access-config-name ExternalNAT --nat-ip "${{ steps.allocate_new_ip.outputs.new_ip }}" --zone="${{ env.zone }}"
        


    - name: Release Old Static IP (optional)
      if: steps.get_current_ip.outputs.current_ip != ''
      run: |
        REGION=$(echo "${{ env.zone }}" | cut -d'-' -f1,2)
        gcloud compute addresses delete "${{ steps.get_current_ip.outputs.current_ip }}" --region "$REGION" --quiet
